<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- product name is likely to change; parameterize full name, abbreviated name, expanded name -->
<!ENTITY PRODNAME "Repose">
<!ENTITY PRODABBREV "Repose">
<!ENTITY PRODEXPAND "REstful PrOxy Service Engine">
    <!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "&#x2013;">
    <!ENTITY mdash  "&#x2014;">
    <!ENTITY hellip "&#x2026;">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

    <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
]>
<!-- in BOOK below, add status="draft" to set watermark on cover and left margin -->
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook" 
      xml:id="Repose-Logging-Deployment-Guide">
    <?rax pdf.url="../../repose-logging-deploy.pdf"?>
    <title>&PRODNAME; Logging Component Deployment Handbook</title>
    <!-- set watermark on cover and left margin 
        <?rax status.bar.text="CONFIDENTIAL"?>
    -->
    <?rax title.font.size="35px" subtitle.font.size="16px"?>
    <titleabbrev>&PRODABBREV; Logging Deployment</titleabbrev>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>v1.0</releaseinfo>
        <productname>&PRODNAME;</productname>
        <pubdate>2012-01-11</pubdate>
        <legalnotice role="apache2">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for systems administrators interested in configuring
                their service to use the logging component of the &PRODEXPAND;. </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2012-01-11</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem><para>Initial release.</para></listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <chapter xml:id="Overview-d1e85">
        <title>About This Document</title>
            <para>
                The purpose of this handbook is to facilitate deployment of &PRODNAME;'s logging component. 
                This handbook is not a tutorial.
                It provides basic information that will help you understand and deploy this &PRODNAME; component, but you must adapt this information to suit your own configuration.
            </para>
            <para>
                This handbook is focused on one &PRODNAME; component.
                Other &PRODNAME; components are documented in companion handbooks.
            </para>
        <section xml:id="Document_Change_History-d1e102">
            <title>Document Change History</title>
            <para>This version of the guide replaces and obsoletes all previous versions.
                The most recent changes are described in the table below: </para>
            <?rax revhistory?>
        </section>
        <xi:include href="chapters/available-doc.xml"/>
    </chapter>
    <!-- naming this section xml:id="Introduction-000" to make it the first page opened in HTML, matching <webhelpDefaultTopic>Introduction-000.html</webhelpDefaultTopic> in pom.xml -->
    <chapter xml:id="Introduction-000">
        <title>Introduction to the Logging Component of &PRODNAME;</title>
        <para>
            &PRODNAME;'s HTTP logging component allows logging of information in HTTP requests that are sent to &PRODNAME; and responses sent from &PRODNAME;.
        </para>
        <para>
            HTTP logging in &PRODNAME; is based on the Apache HTTPD Logging Standard, described at 
            <link xlink:href="http://httpd.apache.org/docs/2.2/mod/mod_log_config.html">http://httpd.apache.org/docs/2.2/mod/mod_log_config.html</link>.
        </para>
        <para> The versioning component enhances the incoming request with an HTTP header named
                <code>X-PP-Service-Origin</code>. This header can be used by components further down
            the stack to perform routing. </para>
        <figure xml:id="Overview">
            <title>Overview of &PRODNAME; HTTP Logging</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="figures/repose-logging-overview-HTTP.png" format="PNG" align="center"/>
                </imageobject>
            </mediaobject>
        </figure>
    </chapter>
    <chapter xml:id="Configuration-d1e365">
        <title>Configuration</title>
        <para> 
            To add the HTTP logging component to a &PRODNAME; deployment, 
            add the <code>http-logging</code> filter to the configuration file.
        </para>
        <important>
            <para>
                &PRODNAME;'s HTTP logging component can only be deployed on a system which supports the UTF-8 character set. 
                If the system does not support UTF-8, an error will be thrown at startup and &PRODNAME; will exit. 
            </para>
        </important>
        <!-- replace below with example and callouts relevant to HTTP logging -->
        <example>
            <title>System Model: XML</title>
            <programlisting language="xml">
<xi:include href="samples/papi-powerproxy-versioning.xml" parse="text"/>
                    </programlisting>
        </example>
        <example>
            <title>Versioning Configuration: XML</title>
            <programlistingco>
                <areaspec>
                    <area xml:id="versioning.xml.service-root" units="linecolumn" coords="5 18"/>
                    <area xml:id="versioning.xml.version-mapping" units="linecolumn" coords="7 21"/>
                    <area xml:id="versioning.xml.id" units="linecolumn" coords="7 24"/>
                    <area xml:id="versioning.xml.pp-host-id" units="linecolumn" coords="7 43"/>
                    <area xml:id="versioning.xml.context-path" units="linecolumn" coords="8 21"/>
                    <area xml:id="versioning.xml.status" units="linecolumn" coords="8 40"/>
                    <area xml:id="versioning.xml.media-types" units="linecolumn" coords="9 21"/>
                    <area xml:id="versioning.xml.atom-links" units="linecolumn" coords="21 19"/>
                </areaspec>
            <programlisting language="xml">
<xi:include href="samples/papi-versioning-versioning.xml" parse="text"/>
            </programlisting>
            </programlistingco>
        </example>
        <para>
        Key elements of the preceding example are labeled with callouts and explained below: 
        </para>
        
        <calloutlist>
            <callout arearefs="versioning.xml.service-root">
                <para>
                    The configuration's service root describes the base URL of the origin service without any versioning information in the URI variant. 
                    This value is used to identify requests against the origin service's resource root as well as construct valid, versioned URIs for the origin service.   
                </para>
                <para> </para>
            </callout>
            <callout arearefs="versioning.xml.version-mapping">
                <para>
                    Version mappings describe the available versions to the requester.
                </para>
                <para>
                    A version mapping must include <code>id</code>, <code>pp-host-id</code>, <code>context-path</code>, <code>status</code>, and <code>media-types</code>.
                </para>
                <para> </para>
            </callout>
            <callout arearefs="versioning.xml.id">
                <para> 
                    <code>id</code>: The ID is responsible for two things. 
                    First, a service version's ID must uniquely identify the version mapping within the configuration:  
                    no two service versions may share the same ID. 
                    In addition, the ID must be the resource variant that follows the service root which identifies this version. 
                    For example, in <code>http://service.api.vendor.com/root/[v1.0/]path/to/resource</code>, the version variant is within square brackets.
                </para>
                <para> </para>
            </callout>
            <callout arearefs="versioning.xml.pp-host-id">
                <para>
                    <code>pp-host-id</code>: The power proxy host ID is used to identify 
                    which power proxy host will answer to versioned requests that match this version mapping. 
                    The power proxy host is defined in the <link linkend="Configuration-d1e365">system model</link>.
                </para>
                <para> </para>
            </callout>
            <callout arearefs="versioning.xml.context-path">
                <para>
                    <code>context-path</code>: The context path attribute is used to indicate that the external mapping for this version, 
                    for example the <code>id</code> attribute, is not the internal mapping.
                    The versioning component will then use this path to route the request to its intended destination.
                </para>
                <para> </para>
            </callout>
            <callout arearefs="versioning.xml.status">
                <para>
                    <code>status</code>: A version mapping's status can be either of four
                    strings: 
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>
                                <code>DEPRECATED</code>
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>ALPHA</code>
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>BETA</code>
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>CURRENT</code>
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    This status may be interpreted by the requester without
                    restriction.
                </para>
                <para> </para>
            </callout>
            <callout arearefs="versioning.xml.media-types">
                <para>
                    <code>media-types</code>: A version mapping must describe the types of content it can understand and return. 
                    These media types must include as human-readable attributes both their base type and the complex type.
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>
                                The <firstterm>base type</firstterm> is a MIME type without versioning or vendor information.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                The <firstterm>complex type</firstterm> is a MIME type with versioning and/or vendor information.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    RFC 2046 at <link xlink:href="http://tools.ietf.org/html/rfc2046/">http://tools.ietf.org/html/rfc2046/</link> describes MIME types.
                </para>
                <para> </para>
            </callout>
            <callout arearefs="versioning.xml.atom-links">
                <para>
                    Atom links are used to richly describe any links that are identified in any returned service version. 
                    RFC 4287 
                    at <link xlink:href="http://tools.ietf.org/html/rfc4287/">http://tools.ietf.org/html/rfc4287/</link> 
                    defines the Atom syndication format.
                </para>
                <para> </para>
            </callout>
        </calloutlist>
        <!-- replace above with example and callouts relevant to HTTP logging -->
    </chapter>
    <chapter xml:id="Handling_Requests-d1e431">
        <title>Choosing What to Log</title>
        <para> 
            You can configure &PRODNAME; to log information from a request's URI and headers. 
            You cannot configure &PRODNAME; to log a request's message content.
            This means a log created by &PRODNAME; can be used to investigate operational issues with no risk of exposing sensitive user data.
        </para>
        <para>
            &PRODNAME;'s HTTP logging component implements a subset of the Apache logging functionality described at 
            <link xlink:href="http://httpd.apache.org/docs/2.2/mod/mod_log_config.html">http://httpd.apache.org/docs/2.2/mod/mod_log_config.html</link>.
            The table below lists the request and response information you may choose to log:
        </para>
        <table border="1" frame="box" width="700">
            <caption>Apache Logging Functionality Implemented by
                &PRODNAME; HTTP Logging Component</caption>
            <col width="25%"/>
            <col width="75%"/>
            <thead>
                <tr>
                    <td>Format String</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <code>\t</code>
                    </td>
                    <td>
                        <para> Tab </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>\n</code>
                    </td>
                    <td>
                        <para> Newline </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%%</code>
                    </td>
                    <td>
                        <para> Percent sign </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%a</code>
                    </td>
                    <td>
                        <para> Remote IP address </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%A</code>
                    </td>
                    <td>
                        <para> Local IP address </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%b</code>
                    </td>
                    <td>
                        <para> Size of response in bytes, excluding
                            HTTP headers </para>
                        <para>
                            <emphasis role="italic">In CLF format:
                                uses "-" rather than zero when no
                                bytes are sent.</emphasis>
                        </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%h</code>
                    </td>
                    <td>
                        <para> Remote host </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%m</code>
                    </td>
                    <td>
                        <para> Request method </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%p</code>
                    </td>
                    <td>
                        <para> Canonical port of the server serving
                            the request </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%q</code>
                    </td>
                    <td>
                        <para> Query string </para>
                        <para>
                            <emphasis role="italic">Prepended with "?"
                                if a query string exists; otherwise,
                                an empty string.</emphasis>
                        </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%s</code>
                    </td>
                    <td>
                        <para> Status </para>
                        <para>
                            <emphasis role="italic">For
                                internally-redirected requests, this
                                is the status of the original
                                request.</emphasis>
                        </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%t</code>
                    </td>
                    <td>
                        <para> Time the request was received </para>
                        <para>
                            <emphasis role="italic">Standard English
                                format.</emphasis>
                        </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%u</code>
                    </td>
                    <td>
                        <para> Remote user </para>
                        <para>
                            <emphasis role="italic">May be bogus if
                                status (<code>%s</code>) is
                                401.</emphasis>
                        </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%U</code>
                    </td>
                    <td>
                        <para> URL path requested, excluding any query
                            string </para>
                    </td>
                </tr>
            </tbody>
        </table>                 
 <para>
     For responses with specific HTTP status codes, you can restrict what is logged. 
     The table below shows examples of format strings using this functionality:
 </para>     
        <table border="1" frame="box" width="700">
            <caption>Examples of Logging Restricted By HTTP Status
                Code</caption>
            <col width="25%"/>
            <col width="75%"/>
            <thead>
                <tr>
                    <td>Format String</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <code>%403,401U</code>
                    </td>
                    <td>
                        <para> For 403 and 401 responses only: log the
                            URL path requested. </para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code>%\!200,304,302U</code>
                    </td>
                    <td>
                        <para> For all responses except 200, 304, and
                            302: log the URL path requested. </para>
                    </td>
                </tr>
            </tbody>
        </table>        
        
        
        
        
    </chapter>
    <chapter xml:id="Using_Log-d1e531">
        <title>Using the Log</title>
        <para> The log file is a text file, so it can be viewed with
            any text viewer. An example of a text viewer that you can
            use is <emphasis role="bold">Notepad</emphasis>. </para>
        <para> The log file can be formatted as a tab-delimited file,
            so it can be opened and manipulated as a spreadsheet.
            Examples of spreadsheet software you can use are <emphasis
                role="bold">OpenOffice.org Calc</emphasis> and
                <emphasis role="bold">Microsoft Excel</emphasis>. </para>
        <para> The log file can be huge, so you may wish to examine it
            via an external parser. An example of an external parser
            that you can use is <emphasis role="bold"
            >Flume</emphasis>. </para>
        <para> The log file will grow until it is rotated, moved, or
            deleted. An example of a utility that you can configure to
            rotate and archive the log file is <emphasis role="bold"
                >logrotate</emphasis>. </para>
    </chapter>
    <xi:include href="chapters/afterword.xml"/>
</book>
