<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- product name is likely to change; parameterize full name, abbreviated name, expanded name -->
<!ENTITY PRODNAME "Repose">
<!ENTITY PRODABBREV "Repose">
<!ENTITY PRODEXPAND "REstful PrOxy Service Engine">
    <!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "&#x2013;">
    <!ENTITY mdash  "&#x2014;">
    <!ENTITY hellip "&#x2026;">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

    <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
]>
<!-- in BOOK below, add status="draft" to set watermark on cover and left margin -->
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook" 
      xml:id="Repose-Ratelimiting-Deployment-Guide">
    <?rax pdf.url="../../repose-ratelimiting-deploy.pdf"?>
    <title>&PRODNAME; Translation Component Deployment
        Handbook</title>
    <!-- set watermark on cover and left margin 
        <?rax status.bar.text="CONFIDENTIAL"?>
    -->
    <?rax title.font.size="35px" subtitle.font.size="16px"?>
    <titleabbrev>&PRODABBREV; Translation Deployment</titleabbrev>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>v2.3.4</releaseinfo>
        <productname>&PRODNAME;</productname>
        <pubdate>2012-11-26</pubdate>
        <legalnotice role="apache2">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for systems administrators
                interested in configuring their service to use the
                Translation component of the &PRODEXPAND;. </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2012-11-23</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem><para>Initial release as internal draft.</para></listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <chapter xml:id="Overview-d1e85">
        <title>About This Document</title>
            <para> 
                The purpose of this handbook is to facilitate deployment of &PRODNAME;'s translation component. This handbook is not a tutorial. It provides basic information
                that will help you understand and deploy this &PRODNAME; component, but you must
                adapt this information to suit your own configuration. 
            </para>  
            <para>
                This handbook is focused on one &PRODNAME; component.
                Other &PRODNAME; components are documented in companion handbooks.
            </para>
        <section xml:id="Document_Change_History-d1e102">
            <title>Document Change History</title>
            <para>This version of the handbook replaces and obsoletes all previous versions.
            The most recent changes are described in the table below: </para>
            <?rax revhistory?>
        </section>
        <xi:include href="chapters/available-doc.xml"/>
    </chapter>
    <!-- naming this section xml:id="Introduction-000" to make it the first page opened in HTML, matching <webhelpDefaultTopic>Introduction-000.html</webhelpDefaultTopic> in pom.xml -->
    <chapter xml:id="Introduction-000">
        <title>Introduction to the Translation Component of &PRODNAME;</title>
        <para> Rate limiting controls the flow of traffic. You can use
            &PRODNAME;'s rate limiting filter to manage the flow of
            traffic into your service so that it does not exceed the
            service's actual capacity. In addition to allowing you to
            manage legitimate workloads, this allows you to prevent
            overload due to abuse of your system. </para>
        <para> To understand how &PRODNAME; handles rate limiting, you
            must understand the relationship between &PRODNAME; and an
            origin service. An origin service is the service for which
            &PRODNAME; is performing a function. For example, if
            &PRODNAME; is used to provide rate limiting to a
            load-balancing service, then the load-balancing service is
            &PRODNAME;'s origin service. Requests are sent to
            &PRODNAME; as the proxy for the origin service, not to the
            server where the origin service lives. &PRODNAME;
            functions as a reverse proxy, in that it acts on behalf of
            the origin service rather than on behalf of the client.
            &PRODNAME; passes client requests to the origin service
            only after those requests have been examined and processed
            by the &PRODNAME; filters configured for that origin
            service. </para>
        <para> &PRODNAME;'s rate limiting filter protects the origin
            service from being bombarded by client requests. It
            accomplishes this by specifying limits for the number of
            times a client may request a given resource. When a client
            has exceeded the number of requests permitted during the
            current time period, no further requests from that client
            are delivered to the origin service until a new time
            period begins. This provides essential protection to any
            public-facing API. </para>
        <para>
            A client's current limits may include the
            client's absolute limits. Absolute limits are specific to a service domain and are
            therefore only provided by the origin service. 
            However, &PRODABBREV; will integrate absolute and current limits as they apply to a client.
        </para>
        <para> &PRODABBREV; does not enforce absolute limits, but it
            does inform the origin service of those limits. You can
            learn more about absolute limits at <xref
                linkend="Absolute-d1e631"/>. </para>
        <para>
            The &PRODNAME; rate limiting component performs two categories of behavior:
            <itemizedlist>
                <listitem>
                    <para>
                      <link linkend="Querying_Limits-d1e531">querying for limits</link> 
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <link linkend="Tracking_Requests-d1e431">tracking limits</link>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <tip>
            <para> Rate limits are controlled by
                    <code>rate-limiting.cfg.xml</code>; to change your
                rate limiting configuration, edit
                    <code>rate-limiting.cfg.xml</code>. You can see an
                annotated example of
                    <code>rate-limiting.cfg.xml</code> in <xref
                    linkend="Configuration-d1e365"/>. </para>
        </tip>
    </chapter>
    <chapter xml:id="Configuration-d1e365">
        <title>Configuration</title>
        <tip>
            <para> Before attempting to customize your rate limiting
                configuration, familiarize yourself with the basic
                &PRODNAME; concepts and deployment methods in our
                Getting Started document. </para>
        </tip>
        <para> The rate limiting component obtains its configuration,
            including its API endpoint, from a file named
                <code>rate-limiting.cfg.xml</code>. We have included
            an annotated example of a valid
                <code>rate-limiting.cfg.xml</code> in this
            section.</para>
        <para> To change your rate limiting configuration, edit
                <code>rate-limiting.cfg.xml</code> at any time. Within
                <code>rate-limiting.cfg.xml</code>, you can specify
            the following: </para> 
        <table rules="all">
            <caption>Customizable Elements of the Rate Limiting
                Configuration</caption>
            <thead>
                <tr>
                    <th>Element</th>
                    <th>Attribute</th>
                    <th>Parameter</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td rowspan="4"><emphasis role="bold"
                            >Endpoint</emphasis>: <?sbr?>
                        <code>&lt;request-endpoint&gt;</code> sets the
                        endpoint and format with which the user can
                        query limits. </td>
                    <td colspan="2"/>
                </tr>
                <tr>
                    <td>
                        <code>&lt;uri-regex&gt;</code> is a regular
                        expression (regex) for the URI at which the
                        user can query their limits. Within the regex,
                        each capture group is allowed the number of
                        hits specified in the value attribute of the
                        limit element. For example, suppose the
                        configuration specifies a regex of
                            <literal>/v1/(.*)</literal> with
                            <code>value</code> set to 100. With this
                        configuration, some requests come in with a
                        URI of <code>/v1/pan</code> and other requests
                        come in with a URI of <code>/v1/cake</code>.
                        Each user would be allowed 200 hits if the
                        hits are evenly divided among the two URIs:
                        100 hits for URI <code>/v1/pan</code> and 100
                        hits for URI <code>/v1/cake</code>. </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <code>&lt;include-absolute-limits&gt;</code>
                        enables or disables integration with absolute
                        limits. </td>
                    <td/>
                </tr>
                <tr>
                    <td><code>&lt;limits-format&gt;</code> identifies
                        the format of returned rate limits.</td>
                    <td><code>OPENSTACK</code>, the format supported
                        by OpenStack. You can learn about this format
                        at <link
                            xlink:href="http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html"
                            >http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html</link>.
                    </td>
                </tr>
                <tr>
                    <td rowspan="5"><emphasis role="bold">
                            Group</emphasis>: <?sbr?>
                        <code>&lt;limit-group&gt;</code> is a list of
                        rate limits to be applied to a user, based on
                        the user's membership in a group. </td>
                    <td colspan="2"/>
                </tr>
                <tr>
                    <td><code>&lt;id&gt;</code> is the unique
                        identifier for a given limit group </td>
                    <td/>
                </tr>
                <tr>
                    <td><code>&lt;groups&gt;</code> is a
                        space-delimited list of the groups to which
                        this limit group will apply </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <para>
                        <code>&lt;default&gt;</code> identifies the
                        limit group that will be applied if a user is
                        passed in either of these conditions: 
                        <itemizedlist>
                            <listitem>
                                <para> no group is specified </para>
                            </listitem>
                            <listitem>
                                <para> no group in the rate limiting
                                   configuration matches the group or
                                   groups specified </para>
                            </listitem>
                        </itemizedlist>
                        </para>
                    </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <para>
                        <code>&lt;limit&gt;</code> describes limits
                        configured for a given endpoint. 
                        </para>
                    </td>
                    <td>
                        <para>
                            <itemizedlist>
                                <listitem>
                                    <para>
                                        <code>&lt;uri&gt;</code> is a
                                        human-readable URI describing the
                                        endpoint for a given configured
                                        limit </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;uri-regex&gt;</code> is
                                        the regex used to match a passing
                                        request to current limit group
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;http-methods&gt;</code>
                                        lists the HTTP methods associated
                                        with this limit. Valid values
                                        include: GET, DELETE, POST, PUT,
                                        HEAD, OPTIONS, CONNECT, TRACE, ALL
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;unit&gt;</code> is the
                                        unit of time associated with this
                                        limit. Valid values include:
                                        SECOND, MINUTE, HOUR, DAY</para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;value&gt;</code> is the
                                        number of requests allowed within
                                        the configured unit of time</para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </td>
                </tr>
            </tbody>
        </table>
        <itemizedlist security="writeronly">
            <!-- hide bulleted list format until confirmed that table format is correct -->
            <listitem>
                <para><emphasis role="bold">Delegation</emphasis>:
                    <?sbr?> If set to <code>true</code> and the
                    identified user has reached a rate limit,
                    &PRODNAME; rate limiting will not return the
                    response directly to the client. Instead,
                    &PRODNAME; will set an
                        <code>X-PP-Rate-Limited</code> header to a
                        <code>Retry-After</code> date for the next
                    available non-rate limited request and send the
                    request on to the origin service. </para>
            </listitem>
            <listitem>
                <para><emphasis role="bold">Endpoint</emphasis>: <?sbr?>
                    <code>&lt;request-endpoint&gt;</code> sets the
                    endpoint and format with which the user can query
                    limits. </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <code>&lt;uri-regex&gt;</code> is a
                            regular expression (regex) for the URI at
                            which the user can query their limits.
                            Within the regex, each capture group is
                            allowed the number of hits specified in
                            the value attribute of the limit element.
                            For example, suppose the configuration
                            specifies a regex of
                                <literal>/v1/(.*)</literal> with
                                <code>value</code> set to 100. With
                            this configuration, some requests come in
                            with a URI of <code>/v1/pan</code> and
                            other requests come in with a URI of
                                <code>/v1/cake</code>. Each user would
                            be allowed 200 hits if the hits are evenly
                            divided among the two URIs: 100 hits for
                            URI <code>/v1/pan</code> and 100 hits for
                            URI <code>/v1/cake</code>. </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;include-absolute-limits&gt;</code>
                            enables or disables integration with
                            absolute limits. </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;limits-format&gt;</code>
                            identifies the format of returned rate
                            limits. Valid values include: <itemizedlist>
                                <listitem>
                                   <para>
                                   <code>OPENSTACK</code>, the format
                                   supported by OpenStack. You can
                                   learn about this format at <link
                                   xlink:href="http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html"
                                   >http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html</link>.
                                   </para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                </itemizedlist>
            </listitem>
            <listitem>
                <para><emphasis role="bold"> Group</emphasis>: <?sbr?>
                    <code>&lt;limit-group&gt;</code> is a list of rate
                    limits to be applied to a user, based on the
                    user's membership in a group. </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <code>&lt;id&gt;</code> is the unique
                            identifier for a given limit group </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;groups&gt;</code> is a
                            space-delimited list of the groups to
                            which this limit group will apply </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;default&gt;</code> identifies
                            the limit group that will be applied if a
                            user is passed in either of these
                            conditions: <itemizedlist>
                                <listitem>
                                   <para> no group is specified
                                   </para>
                                </listitem>
                                <listitem>
                                   <para> no group in the rate
                                   limiting configuration matches the
                                   group or groups specified </para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;limit&gt;</code> describes
                            limits configured for a given endpoint: <itemizedlist>
                                <listitem>
                                   <para>
                                   <code>&lt;uri&gt;</code> is a
                                   human-readable URI describing the
                                   endpoint for a given configured
                                   limit </para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;uri-regex&gt;</code> is
                                   the regex used to match a passing
                                   request to current limit group
                                   </para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;http-methods&gt;</code>
                                   lists the HTTP methods associated
                                   with this limit. Valid values
                                   include: GET, DELETE, POST, PUT,
                                   HEAD, OPTIONS, CONNECT, TRACE, ALL
                                   </para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;unit&gt;</code> is the
                                   unit of time associated with this
                                   limit. Valid values include:
                                   SECOND, MINUTE, HOUR, DAY</para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;value&gt;</code> is the
                                   number of requests allowed within
                                   the configured unit of time</para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
        <para>
            Your rate limiting configuration in <code>rate-limiting.cfg.xml</code> will resemble the following example:
        </para>
        <example>
            <title>Rate Limiting Configuration: XML</title>
            <programlistingco>
                <areaspec>
                    <area xml:id="cfg.xml.request-endpoint"
                        units="linecolumn" coords="5 22"/>
                    <area xml:id="cfg.xml.uri-regex"
                        units="linecolumn" coords="5 32"/>
                    <area xml:id="cfg.xml.include-absolute-limits"
                        units="linecolumn" coords="6 32"/>
                    <area xml:id="cfg.xml.limit-group"
                        units="linecolumn" coords="8 17"/>
                    <area xml:id="cfg.xml.id" units="linecolumn"
                        coords="8 21"/>
                    <area xml:id="cfg.xml.groups" units="linecolumn"
                        coords="9 15"/>
                    <area xml:id="cfg.xml.default" units="linecolumn"
                        coords="9 35"/>
                    <area xml:id="cfg.xml.limit" units="linecolumn"
                        coords="10 15"/>
                </areaspec>
                <programlisting language="xml">
<xi:include href="samples/repose-ratelimit.xml" parse="text"/>
            </programlisting>
            </programlistingco>
        </example>
        <para> Key elements of the preceding example are labeled with
            callouts and explained below: </para>
        <calloutlist>
            <callout arearefs="cfg.xml.request-endpoint">
                <para> The <code>request-endpoint</code> configuration
                    element must specify a regular expression that
                    identifies client requests for the client's
                    current limits. </para>
                <para>This element is
                    <emphasis>required</emphasis>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.uri-regex">
                <para> The <code>uri-regex</code> attribute of the
                        <code>request-endpoint</code> configuration
                    element must be a regular expression. It should
                    match all representations of the request resource
                    that the rate limiting component should answer. </para>
                <para>This attribute is
                    <emphasis>required</emphasis>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.include-absolute-limits">
                <para> The <code>include-absolute-limits</code>
                    attribute of the <code>request-endpoint</code>
                    configuration element is a Boolean attribute that
                    can be used to switch on or off integration with
                    the origin service's absolute limits. </para>
                <para>This attribute is
                    <emphasis>optional</emphasis>.</para>
                <para>Acceptable values are <code>TRUE</code>,
                        <code>FALSE</code>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.limit-group">
                <para> One or more specifications of
                        <code>limit-group</code> may be associated
                    with a single specification of
                        <code>request-endpoint</code>. </para>
                <para> Limit groups identify a group of related rate
                    limits and bind them to a series of names. The
                    names can be used to limit incoming requests using
                    the <code>X-PP-Groups</code> header. </para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.id">
                <para> An <code>id</code> uniquely identifies each
                        <code>limit-group</code>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.groups">
                <para> Specifying <code>groups</code> for a
                        <code>limit-group</code> associates it with
                    recognizable workloads. In this example, one
                        <code>limit-group</code> relates to customers
                    and another relates to administrators. </para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.default">
                <para> A single <code>limit-group</code> may be
                    identified as the <code>default</code> group. The
                        <code>default</code> group will handle any
                    requests that cannot be matched on the basis of a
                    group name to any of the groups identified in the
                        <code>X-PP-Groups</code> header. In this
                    example, the limits defined for
                        <code>groups="customer"</code> will be applied
                    to requests that cannot be explicitly matched to a
                    group. </para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.limit">
                <para>
                    <code>limit</code> and its attributes are
                    discussed in <xref
                        linkend="Configuring_Limits-d1e376"/>. </para>
                <para> </para>
            </callout>
        </calloutlist>
        <section xml:id="Configuring_Limits-d1e376">
            <title>Configuring Limits</title>
            <para> To set a rate limit, assign acceptable values to
                the rate limiting configuration attributes as shown in
                the table below. You can see these attributes in
                context in the code sample introducing <xref
                    linkend="Configuration-d1e365"/>. </para>
            <table border="1" frame="box">
                <?dbfo keep-together="always"?>
                <caption>Configuring Limits</caption>
                <thead>
                    <tr>
                        <td>Attribute</td>
                        <td>Description</td>
                        <th>Acceptable Values</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>uri</code>
                        </td>
                        <td> The <code>uri</code> attribute of a given
                            limit should be a human-readable
                            representation of the regular expression
                            used to match this limit. The URI is
                            useful for client end-user interfaces as
                            well as for documentation purposes. </td>
                        <td><emphasis>any valid URI</emphasis></td>
                    </tr>
                    <tr>
                        <td><code>uri-regex</code></td>
                        <td>The <code>uri-regex</code> attribute must
                            be a regular expression and should match
                            all request resource representations to
                            which the given limit should apply. </td>
                        <td><emphasis>any valid regex</emphasis></td>
                    </tr>
                    <tr>
                        <td><code>http-methods</code></td>
                        <td> Limits can trigger on specific HTTP
                            methods. These trigger methods must be
                            specified by the <code>http-methods</code>
                            attribute. As the name implies, the
                            attribute may contain more than one value;
                            multiple values are delimited by spaces.
                            The rate limiting component supports all
                            valid HTTP methods as described by RFC
                            2616 at <link
                                xlink:href="http://www.ietf.org/rfc/rfc2616.txt"
                                >http://www.ietf.org/rfc/rfc2616.txt</link>.
                            If the configuration specifies
                                <code>ALL</code> for the
                                <code>http-methods</code> attribute,
                            this informs the rate limiting component
                            that rate limiting should occur on all
                            HTTP requests. </td>
                        <td><code>GET</code>, <code>DELETE</code>,
                                <code>POST</code>, <code>PUT</code>,
                                <code>HEAD</code>, <code>TRACE</code>,
                                <code>OPTIONS</code>,
                                <code>CONNECT</code>,
                            <code>ALL</code></td>
                    </tr>
                    <tr>
                        <td><code>unit</code></td>
                        <td> Every limit must specify a time unit
                            specified by the <code>unit</code>
                            attribute. The valid values for this
                            attribute are also enumerated in the
                            OpenStack limits XML Schema Definition
                            (XSD) at <link
                                xlink:href="http://docs.openstack.org/common/api/v1.0"
                                >http://docs.openstack.org/common/api/v1.0</link>. </td>
                        <td><code>SECOND</code>, <code>MINUTE</code>,
                                <code>HOUR</code>,
                            <code>DAY</code></td>
                    </tr>
                    <tr>
                        <td><code>value</code></td>
                        <td> A limit's <code>value</code> attribute is
                            an integer which describes the number of
                            requests the limit allows. In combination
                            with the <code>unit</code> attribute, the
                            number of requests within a slice of time
                            describes the rate for the given limit.
                            The rate is then used to perform rate
                            limiting. </td>
                        <td><emphasis>any integer</emphasis></td>
                    </tr>
                </tbody>
            </table>
            <important>
                <para> The <code>unit</code> and <code>value</code>
                    attributes must always be specified as pairs. For
                    example, <code>unit="SECOND" value="1"</code>
                    allows a rate of one request per second. </para>
            </important>
        </section>
        <section xml:id="Constructing_Cache_Keys-d1e378">
            <title>Constructing Cache Keys with Regular
                Expressions</title>
            <para> The rate limiting component must be able to track
                rate limits per resource. To effectively facilitate
                this, the rate limiting component attempts to generate
                a cache key from the limit's regular expression, as
                defined in its <code>uri-regex</code> attribute.
                Extracting cache keys from the regular expression is
                performed via regular expression capture groups. </para>
            <tip>
                <para>
                    Regular expression (regex) capture groups are essential in configuring the rate limiting component and
                    other &PRODNAME; components. Our 
                    <link linkend="References-d1e994">bibliography</link>
                    includes a link to an excellent source of information about
                    regex capture groups.
                </para>
            </tip>
            <para> If no capture groups are specified, then the entire
                request URI is used as a the cache key for the
                request. This is considered sub-optimal in most cases,
                since each unique resource representation will have
                requests made against it tracked separately. </para>
            <para> The rate limiting component uses the
                java.util.regex package to match character sequences
                against patterns specified by regular expressions. The
                patterns are defined in
                    <code>java.util.regex.Pattern</code>. You can
                learn about <code>java.util.regex.Pattern</code> at
                    <link
                    xlink:href="http://download.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html"
                    >http://download.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html</link>. </para>
            <warning>
                <para> You can get an unexpected result by failing to
                    account for all components of a request URI. </para>
                <para> As you construct regular expressions, keep in
                    mind that query parameters as well as other
                    request URI components <emphasis role="bold"
                        >are</emphasis> included as part of the
                    request URI that the rate limiting component
                    operates against. </para>
            </warning>
            <para>The following examples may help you plan your own
                regular expressions: </para>
            <annotation>
                <remark> The ampersand character is used in regular
                    expressions but it's also used in DocBook XML
                    entities, and not ignored even inside code
                    wrappers, so it's problematic to include in these
                    examples. RegEx uses so many characters I can't
                    guess any I could assign as escapes, even if I was
                    sure escaping would work; for now, an ampersand to
                    be displayed in the RegEx sample is coded as
                    ampersand+a+m+p+semicolon. Check for similar
                    complications if you add any other RegEx examples.
                </remark>
            </annotation>
            <table border="1" frame="box">
                <?dbfo keep-together="always"?>
                <caption>Sample Regular Expressions</caption>
                <thead>
                    <tr>
                        <td>RegEx</td>
                        <td>Discussion</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <code>/service/.*</code>
                        </td>
                        <td>
                            <para> This is a blanket regular
                                expression that recognizes a parent
                                resource named <code>service</code>
                                and catches any request against a
                                resource that falls under that parent. </para>
                            <para> The rate limiting component cannot
                                detect whether the service implementer
                                is requesting that each resource
                                request be tracked separately or as
                                part of a group; the component
                                defaults to tracking limited requests
                                under unique keys. </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>/service/([^!*'();:@&amp;=+$,/?#\\[\\]]*)/.*</code>
                        </td>
                        <td>
                            <para> This regular expression generates
                                cache keys from the second-tier
                                resource in a given request URI. This
                                is useful for grouping child resources
                                under a shared rate limit. </para>
                            <para> A service can require clients to
                                use their account numbers as part of
                                the resource tree to their service
                                resources. For a client request formed
                                like
                                   <code>http://example.com/service/12345-account/resource</code>,
                                executing this regular expression
                                against the client request extracts
                                   <code>12345-account</code>. The
                                rate limiting component can use this
                                extracted information as a unique
                                identifier to ensure that all of the
                                recorded rate limits belong only to
                                this client. </para>
                        </td>
                    </tr>
                </tbody>
            </table>
            <note>
                <para> Service implementers should use capture groups
                    in their regular expressions. In addition, the
                    performance of the regular expression should be
                    taken into consideration when designing limits.
                    This is because a given expression's performance
                    has a direct impact on the rate limiting
                    component's performance and throughput. </para>
            </note>
        </section>
    </chapter>
    <xi:include href="chapters/afterword.xml"/>
</book>