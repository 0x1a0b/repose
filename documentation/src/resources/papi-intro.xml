<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
    <!-- product name is likely to change; parameterize full name and abbreviation -->
    <!ENTITY PRODNAME "Power API">
    <!ENTITY PRODABBREV "PAPI">
    <!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "&#x2013;">
    <!ENTITY mdash  "&#x2014;">
    <!ENTITY hellip "&#x2026;">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

    <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
]>
<!-- in BOOK below, add status="draft" to set watermark on cover and left margin -->
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook" >
    <?rax pdf.url="../../papi-authn-deploy.pdf"?>
    <title>&PRODNAME; Authentication Component Deployment Handbook</title>
    <!-- set watermark on cover and left margin 
        <?rax status.bar.text="CONFIDENTIAL"?>
    -->
    <?rax title.font.size="35px" subtitle.font.size="16px"?>
    <titleabbrev>&PRODABBREV; Introduction</titleabbrev>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2010</year>
            <year>2011</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>v0.9</releaseinfo>
        <productname>&PRODNAME;</productname>
        <pubdate>2011-09-24</pubdate>
        <legalnotice role="apache2">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for anyone seeking basic information about &PRODNAME;. </para>
        </abstract>
    </info>
    <chapter xml:id="Overview-d1e85">
        <title>Overview</title>
        <section xml:id="Purpose-d1e90">
            <title>Purpose of This Document</title>
            <para> The purpose of this Introduction is to answer several basic questions about
                &PRODNAME;: </para>
            <orderedlist spacing="normal">
                <listitem>
                    <para>
                        What is &PRODNAME;?
                    </para>
                </listitem>
                <listitem>
                    <para>
                        How can I try &PRODNAME;?
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Where can I get more details about &PRODNAME;?
                    </para>
                </listitem>
            </orderedlist>   
        </section>
        <section xml:id="Document_Change_History-d1e102">
            <title>Document Change History</title>
            <para>This version of the Introduction replaces and obsoletes all previous versions. The
                most recent changes are described in the table below: </para>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td colspan="1">Revision Date</td>
                        <td colspan="4">Summary of Changes</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1" align="center">Sep 26, 2011</td>
                        <td colspan="4" align="left">
                            <itemizedlist spacing="compact">
                                <listitem>
                                    <para>Initial release.</para>
                                </listitem>
                            </itemizedlist>
                        </td>
                    </tr>
                </tbody>
            </informaltable>
        </section>
        <xi:include href="chapters/available-doc.xml"/>
    </chapter>
    <chapter xml:id="Define-d1e365">
        <title>What is &PRODNAME;?</title>
        <para> 
            bla
        </para>
    </chapter>
    <chapter xml:id="Try-d1e731">
        <title>How Can I Try &PRODNAME;?</title>
        <annotation>
            <remark>
                Source for this chapter is https://wiki.mosso.com/display/CT/Deployment
            </remark>
        </annotation>
        <para>
            &PRODNAME; is distributed as a filter bundle, containing all available components. 
            You can choose which components to implement in your configuration.            
        </para>
        <figure xml:id="Filter-Bundle">
            <title>Multiple &PRODNAME; Components in Filter Bundle</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="figures/papi-intro-filterBundle.png" format="PNG" align="center"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            You can edit your <code>power-proxy.xml</code> to identify &PRODNAME; components to be loaded into the Power Proxy filter.
            You can configure the Power Proxy to use one or multiple &PRODNAME; components as additional filters, as shown below.
        </para>
        <figure xml:id="Power-Proxy">
            <title>Loading Multiple &PRODNAME; Components into Power Proxy</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="figures/papi-intro-powerproxy.png" format="PNG" align="center"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            &PRODNAME;'s components may be integrated with other services in several ways, including:
        </para> 
        <itemizedlist spacing="compact">
            <listitem>
                <para>
                    <link linkend="Embedded-d1e111">Embedded</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="Root-d1e222">Root.WAR</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="Valve-d1e333">Valve</link>
                    Valve
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="ProxyServer-d1e444">Proxy Server</link>
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="ProxyCluster-d1e555">Proxy Cluster</link>
                </para>
            </listitem>
        </itemizedlist>   
        <section xml:id="Embedded-d1e111">
            <title>Deployment Method: Embedded</title>
            <warning>
                <para> 
                    Early adopters of &PRODNAME; used this method. 
                    If you are developing a new service, do not use Embedded deployment.
                    This method will be deprecated soon.
                </para>
            </warning>
            <para>
                <firstterm>Embedded</firstterm> deployment means that the Power Filter is embedded in a service's WAR. 
                The service's host must also host all of the &PRODNAME; components in the same app container.
                Artifacts are loaded from the &PRODABBREV; filter bundle into the Power Filter.
                Requests pass through the Power Filter before continuing to the service-specific filters.
                The servlet container may be Tomcat, Jetty, GlassFish, or similar products.
            </para>
            <figure xml:id="Embed-d1e112">
                <title>Deployment by Embedding into WAR</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="figures/papi-intro-deploy-embedded.png" format="PNG" align="center"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>
                To use this deployment method, configure <code>power-proxy.xml</code> as follows:
            </para>
            <example>
                <title>Configuring power-proxy.xml for Embedded Deployment</title>
                <programlisting language="xml">
<xi:include href="samples/papi-deploy-embedded.xml" parse="text"/>
                    </programlisting>
            </example>
        </section>
        <section xml:id="Root-d1e222">
            <title>Deployment Method: Root.WAR</title>
            <para> In <firstterm>Root.War</firstterm> deployment, the <code>root.war</code> supplied by &PRODNAME; replaces
                the root component of the servlet container. The servlet container may be Tomcat,
                Jetty, GlassFish, or similar products. </para>
            <note>
                <para>
                    This deployment method is discussed in more detail in the Root.WAR Deployment Handbook.
                </para>
            </note>    
            <figure xml:id="Root-Replace-d1e111">
                <title>Deployment by Replacing the Root Component</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="figures/papi-intro-deploy-root.png" format="PNG" align="center"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <example>
                <title>Configuring power-proxy.xml for Root.WAR Deployment</title>
                <programlisting language="xml">
<xi:include href="samples/papi-deploy-root.xml" parse="text"/>
                    </programlisting>
            </example>
        </section>
        <section xml:id="Valve-d1e333">
            <title>Deployment Method: Valve</title>
            <para>
                In <firstterm>Valve</firstterm> deployment, Power API is in an external servlet container and acts as a second client, 
                replicating each client request. 
                A client sends a request to Valve, then Valve sends the request to Power Filter to processes the request. 
                Valve also sends the modified request to the origin service, which may be a Python service. 
                The origin service sends a response to Valve, which passes that response back to the client.
            </para>
            <figure xml:id="Valve-d1e334">
                <title>Deployment as Client Replica</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="figures/papi-intro-deploy-valve.png" format="PNG" align="center"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </section>
        <section xml:id="ProxyServer-d1e444">
            <title>Deployment Method: Proxy Server</title>
            <para>
                In <firstterm>Proxy Server</firstterm> deployment, &PRODNAME; is in an external servlet container. 
                This allows host-level routing over the network, so a non-Java service can take advantage of &PRODABBREV; features.
            </para>
            <figure xml:id="ProxyServer-d1e445">
                <title>Deployment as External Servlet Container</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="figures/papi-intro-deploy-proxyServer.png" format="PNG" align="center"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <example>
                <title>Configuring power-proxy.xml for Proxy Server Deployment</title>
                <programlisting language="xml">
<xi:include href="samples/papi-deploy-proxyServer.xml" parse="text"/>
                    </programlisting>
            </example>
        </section>
        <section xml:id="ProxyCluster-d1e555">
            <title>Deployment Method: Proxy Cluster</title>
            <para>  
                Using <firstterm>Proxy Cluster</firstterm> deployment, &PRODNAME; may be scaled across multiple hosts.
                Auto-balance caching between the cluster's nodes will occur on
                the basis of resources and requests. 
                This allows faster processing. 
            </para>
            <note>
                <para>
                    Only the Rate Limiting component is able to take advantage of auto-balance caching's performance improvement.
                </para>
            </note>
            <figure xml:id="ProxyCluster-d1e556">
                <title>Deployment Across Multiple Hosts</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="figures/papi-intro-deploy-proxyCluster.png" format="PNG" align="center"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <example>
                <title>Configuring power-proxy.xml for Proxy Cluster Deployment</title>
                <programlisting language="xml">
<xi:include href="samples/papi-deploy-proxyCluster.xml" parse="text"/>
                    </programlisting>
            </example>
        </section>
    </chapter>
    <xi:include href="chapters/afterword.xml"/>
</book>