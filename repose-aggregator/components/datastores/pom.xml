<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.rackspace.papi.components</groupId>
        <artifactId>components-support</artifactId>
        <version>6.2.2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>datastores-support</artifactId>

    <name>Repose Components - Datastores POM</name>
    <description>
        Repose uses "datastores" to store various data.

        By default, the local datastore is used, implemented as an in memory EH Cache.
        A distributed datastore can be configured, which allows "striped" data storage
        across all the nodes in a cluster.

        Datastores implement a specific API which is outlined below:

        get(key) - access data associated with a specific key value

        put(key, value) - stores a piece of data and associates it with a key value
        put(key, value, time, unit) can be used to specify a duration of the data's
        time to live in specific units.

        patch(key, value) - used to update a specific value in the datastore
        patch(key, value, time, unit) can be used to update a specific value in the datastore
        as well as the time values associated with it

        remove(key) - removes the key value pair associated with the provided key

        removeAll() - removes all elements in the datastore

        getName() - gets the name of the datastore
    </description>
    <packaging>pom</packaging>

    <modules>
        <module>api</module>
        <module>ehcache</module>
        <module>distributed</module>
    </modules>
</project>
