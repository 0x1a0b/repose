dependencies {
    compile project(":repose-aggregator:core:repose-core-api")
    compile project(":repose-aggregator:commons:commons-utilities")
    compile project(":repose-aggregator:external:pjl-compressing-filter")
    compile "org.springframework:spring-beans"
    compile "org.scala-lang:scala-library"
    compile "com.typesafe.scala-logging:scala-logging-slf4j_$scalaMajDotMin"

    provided "javax.servlet:javax.servlet-api"
    provided "javax.inject:javax.inject"

    testCompile project(":repose-aggregator:commons:commons-test")
    testCompile "junit:junit"
    testCompile "org.scalatest:scalatest_$scalaMajDotMin"
    testCompile "org.mockito:mockito-all"
    testCompile "org.springframework:spring-test"
    testCompile "org.slf4j:jcl-over-slf4j"
}

jacocoTestCoverageVerification {
    violationRules {
        rules.forEach { rule ->
            rule.limits.forEach { limit ->
                if (limit.counter == 'INSTRUCTION' && limit.value == 'COVEREDRATIO') {
                    // todo: set to the current coverage
                    // todo: the missing coverage is from the xjc-generated ObjectFactory
                    limit.minimum = 0.73
                }
            }
        }
    }
}
