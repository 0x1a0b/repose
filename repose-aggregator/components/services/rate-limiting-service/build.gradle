dependencies {
    compile project(":repose-aggregator:commons:commons-utilities")
    compile project(":repose-aggregator:components:services:datastore-service:datastore-service-api")
    compile "org.slf4j:slf4j-api"
    compile "org.apache.commons:commons-lang3"

    compileOnly "javax.servlet:javax.servlet-api"

    testCompile project(":repose-aggregator:commons:commons-configuration")
    testCompile project(":repose-aggregator:commons:commons-test")
    testCompile "junit:junit"
    testCompile "org.hamcrest:hamcrest-all"
    testCompile "org.mockito:mockito-all"
    testCompile "org.codehaus.groovy:groovy-all"
    testCompile "org.scalatest:scalatest_$scalaMajDotMin"
    testCompile "org.spockframework:spock-core"
}

license {
    excludes(["**/limits.xml", "**/limits.xsd", "**/duplicate-limit-ids.xml", "**/valid-rate-limiting-config.xml"])
}

jacocoTestCoverageVerification {
    violationRules {
        rules.forEach { rule ->
            rule.limits.forEach { limit ->
                if (limit.counter == 'INSTRUCTION' && limit.value == 'COVEREDRATIO') {
                    // todo: set to the current coverage -- need more coverage, but we don't want the build to fail for the baseline
                    limit.minimum = 0.73
                }
            }
        }
    }
}
