<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.openrepose</groupId>
        <artifactId>profile-support</artifactId>
        <version>7.0.1.0-SNAPSHOT</version>
    </parent>

    <name>Repose Core - Core Support</name>
    <artifactId>core-support</artifactId>
    <packaging>pom</packaging>

    <description>
        core-lib: Repose Core

        core-service-api: Service APIs provided in Repose Core

        valve: Standalone Repose java servlet

        web-application: Wraps Repose up in a WAR
    </description>

    <modules>
        <module>core-service-api</module>
        <module>core-lib</module>
        <module>web-application</module>
        <module>valve</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>2.6.0</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.netty</groupId>
                <artifactId>netty</artifactId>
                <version>3.2.7.Final</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>upload-veracode-static-scan</id>
            <dependencies>
                <dependency>
                    <groupId>com.rackspace.api.clients</groupId>
                    <artifactId>veracode-client</artifactId>
                    <version>1.3</version>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.groovy.modules.http-builder</groupId>
                    <artifactId>http-builder</artifactId>
                    <version>0.7</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                    <version>4.3.3</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpcore</artifactId>
                    <version>4.3</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <version>1.3</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        import com.rackspace.api.clients.veracode.DefaultVeracodeApiClient
                                        import groovy.util.AntBuilder
                                        import groovyx.net.http.HTTPBuilder
                                        import static groovyx.net.http.Method.*
                                        def client = new DefaultVeracodeApiClient("https://analysiscenter.veracode.com/api/", '${veracode.username}', '${veracode.password}', System.out)
                                        def version = project.version
                                        def buildVersion = 'core-lib' - version - '-SNAPSHOT'
                                        buildVersion = buildVersion.replaceAll("\\.","") + '${build.number}'
                                        def copyFile = new File('${project.basedir}' + "/core/core-lib/target/repose.war")
                                        def warFile = new File('${project.basedir}', "/target/repose-" + version + ".war")
                                        // workaround for the veracode-client-java not taking buildVersion as String
                                        print "Uploading artifacts with version: " + buildVersion + "\n"
                                        def buildVersionInt = buildVersion.toInteger()
                                        // workaround for veracode wanting the same filename for each scan
                                        new AntBuilder().copy(file:warFile.canonicalPath, tofile:copyFile.canonicalPath)
                                        def appId = client.getAppId("Repose Core Library")
                                        print "AppId = " + appId + "\n"
                                        def buildId = client.scanArtifacts([copyFile].asList(), buildVersionInt, "Repose Core Library", "Linux")
                                        new AntBuilder().delete(file:copyFile.canonicalPath)
                                        // the pre-scan could take 3 - 5 minutes
                                        print "Waiting for pre-scan to complete\n"
                                        sleep 5 * 60 * 1000
                                        // workaround for the java client not making HTTP call to beginscan.do
                                        print "Submitting /api/4.0/beginscan.do\n"
                                        def http = new HTTPBuilder("https://analysiscenter.veracode.com/api/")
                                        http.auth.basic '${veracode.username}', '${veracode.password}'
                                        http.request(POST) {
                                        uri.path = '/api/4.0/beginscan.do'
                                        uri.query = ['app_id': appId, 'scan_all_top_level_modules': true]
                                        }
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

