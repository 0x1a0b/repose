#!/usr/bin/env groovy

properties([
        buildDiscarder(logRotator(numToKeepStr: '14')),
        pipelineTriggers([cron('H H(0-7) * * *')]),
        parameters([string(
                defaultValue: "",
                description: "Optional - Extra options to add to the end of the ansible-playbook command.",
                name: "extraOptions")])
])

def perfTests = []

stage("Determine performance tests to run") {
    node("performance") {
        checkout scm
        dir("repose-aggregator/tests/performance-tests/test_vars") {
            def files = findFiles(glob: "**/*.yml")
            // collect all tests, but filter out the generic scripting test
            for (int index = 0; index < files.size(); index++) {
                def test = files[index].path.replace(".yml", "")
                if (!test.equalsIgnoreCase("filters/scripting")) {
                    perfTests.add(test)
                }
            }
        }
    }
}

stage("Performance Test") {
    def performanceJenkinsJob = "performance-test"
    def performanceTestParam = "perf_test"
    def extraOptionsParam = "extra_options"

    def jobsToRun = [:]

    for (int index = 0; index < perfTests.size(); index++) {
        def perfTest = perfTests[index]
        jobsToRun[perfTest] = {
            retry(3) {
                build(job: performanceJenkinsJob, parameters: [
                        [$class: "StringParameterValue", name: performanceTestParam, value: perfTest],
                        [$class: "StringParameterValue", name: extraOptionsParam, value: params.extraOptions]])
            }
        }
    }

    // starts the list of jobs to build in parallel
    parallel(jobsToRun)
}
