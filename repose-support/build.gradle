subprojects {
    group = 'org.openrepose.filters.core.test'

    dependencies {
        compile "org.scala-lang:scala-library"
    }
}

/**
 * Because an Ear project is always the same, this is a function to clean up our build script
 * @param projectName The name of the ear project
 * @param deps a list of dependencies that will go in this ear
 * @return
 */
def filterBundleProject(String projectName, List<String> deps) {
    project(projectName) {
        apply plugin: 'ear'

        dependencies {
            deps.each { proj ->
                earlib project(proj)
            }
        }
    }

}


project(':repose-support:core-test-filter') {
    dependencies {
        provided 'javax.servlet:javax.servlet-api'
        provided 'javax.inject:javax.inject'
    }
}

filterBundleProject(':repose-support:core-test-filter-bundle', [':repose-support:core-test-filter'])

project(':repose-support:second-filter') {
    dependencies {
        provided 'javax.servlet:javax.servlet-api'
        provided 'javax.inject:javax.inject'
    }
}

filterBundleProject(':repose-support:second-filter-bundle', [':repose-support:second-filter'])

filterBundleProject(':repose-support:busted-application-name-ear', [])

filterBundleProject(':repose-support:busted-web-fragment-ear', [])

project(':repose-support:classloader-dependency-one') {
}

project(':repose-support:classloader-dependency-two') {
}

project(':repose-support:filter-one') {
    dependencies {
        provided 'javax.servlet:javax.servlet-api'
        provided 'javax.inject:javax.inject'
        compile 'org.apache.commons:commons-lang3'
        compile project(':repose-support:classloader-dependency-one')
    }
}

project(':repose-support:filter-two') {
    dependencies {
        provided 'javax.servlet:javax.servlet-api'
        provided 'javax.inject:javax.inject'
    }
}

project(':repose-support:filter-three') {
    dependencies {
        provided 'javax.servlet:javax.servlet-api'
        provided 'javax.inject:javax.inject'
        compile project(':repose-support:classloader-dependency-one')
    }
}

project(':repose-support:filter-four') {
    dependencies {
        provided 'javax.servlet:javax.servlet-api'
        provided 'javax.inject:javax.inject'
        provided 'org.apache.commons:commons-lang3'
        compile project(':repose-support:classloader-dependency-one')
    }
}

project(':repose-support:filter-five') {
    dependencies {
        provided 'javax.servlet:javax.servlet-api'
        provided 'javax.inject:javax.inject'
        provided 'org.apache.commons:commons-lang3'
        compile project(':repose-support:classloader-dependency-two')
    }
}

filterBundleProject(':repose-support:classloader-bundle-one', [':repose-support:filter-one'])

filterBundleProject(':repose-support:classloader-bundle-two', [':repose-support:filter-two'])

filterBundleProject(':repose-support:classloader-bundle-three', [':repose-support:filter-three'])

filterBundleProject(':repose-support:classloader-bundle-four', [':repose-support:filter-four'])

filterBundleProject(':repose-support:classloader-bundle-five', [':repose-support:filter-five'])
