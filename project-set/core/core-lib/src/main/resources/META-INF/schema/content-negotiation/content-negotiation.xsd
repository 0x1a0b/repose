<?xml version="1.0" encoding="UTF-8"?>

<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified"
           targetNamespace="http://docs.rackspacecloud.com/power-api/content-negotiation/v1.0"
           xmlns:cneg="http://docs.rackspacecloud.com/power-api/content-negotiation/v1.0"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:element name="content-negotiation" type="cneg:content-negotiation" />

    <xs:simpleType name="version-status">
        <xs:annotation>
            <xs:documentation>
                <html:p>It does cool stuff</html:p>
            </xs:documentation>
        </xs:annotation>
        
        <xs:restriction base="xs:string">
            <xs:enumeration value="Deprecated" />
            <xs:enumeration value="Alpha" />
            <xs:enumeration value="Beta" />
            <xs:enumeration value="Current" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="content-negotiation">
        <xs:annotation>
            <xs:documentation>
                <html:p>It does cool stuff</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:all>
            <xs:element name="headers" type="cneg:headers" minOccurs="0" maxOccurs="1" />
            <xs:element name="media-types" type="cneg:media-types" minOccurs="1" maxOccurs="1" />
            <xs:element name="version-routing" type="cneg:version-routing" minOccurs="1" maxOccurs="1" />
            <xs:element name="messaging" type="cneg:messaging" minOccurs="1" maxOccurs="1" />
        </xs:all>
    </xs:complexType>

    <xs:complexType name="headers">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes a collection of headers that will not be filtered by the proxy. Accpept</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="header" type="cneg:header" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="header">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes a header that will not be filtered</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Name of the header to pass through filtering</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="version-routing">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes a collection of service versions</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="service" type="cneg:service" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="service">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes a service version</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="version" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Name of the service's canonical version which will be used for URL rewriting and version choice matching</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="status" type="cneg:version-status" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Determines the status of the version being defined</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="origin-ref" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Reference name of the destination to be loaded from the system model configuration</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="media-types">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes a collection of media types that will be sent from the serivce</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="media-type" type="cneg:media-type" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="media-type">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes a single media type</html:p>
            </xs:documentation>
        </xs:annotation>
        
        <xs:attribute name="id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Unique id for this media type filter definition</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="type" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Request header type that will match this named media type</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        
        <xs:attribute name="extension" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Request URI extension type that will match this named media type</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="default" type="xs:boolean" use="optional" default="false">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Defines whether or not this media-type is the defined default for the service</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="messaging">
        <xs:annotation>
            <xs:documentation>
                <html:p>List of status-code</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="status-code" type="cneg:status-code" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="status-code">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes a status code that will be handled</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="message" type="cneg:status-code-message" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>

        <xs:attribute name="id" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Id of the status code rewrite</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="code-regex" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Defines a regular expression that will be used to match status codes against this declaration</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="status-code-message">
        <xs:annotation>
            <xs:documentation>
                <html:p>Defines a message that will be used when matching the parent status code</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="prepend-origin" type="xs:boolean" use="optional" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                Tells the service wether or not to prepend the message
                                with the origin response body or to completely overwrite
                                it with its content.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                
                <xs:attribute name="type" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                Type to match against what the client originally requested when
                                performing status code message decision logic
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>

                <xs:attribute name="href" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                Specifies a location for getting the message instead
                                of reading it directly from the config file
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
</xs:schema>